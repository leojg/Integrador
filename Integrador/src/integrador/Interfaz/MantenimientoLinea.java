package integrador.Interfaz;

import exceptions.FormatoLineaIncorrectoException;
import exceptions.NombreRepetidoException;
import integrador.Utilitaria;
import integrador.dominio.FachadaInterfaz;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Observable;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author Administrador
 */
public class MantenimientoLinea extends Mantenimiento {

    private JButton btnAlta;
    private JButton btnBaja;
    private JButton btnMod;
    private JTable tableLin;
    private JPanel panelBtn;
    int srow = -1;

    /**
     * Creates new form MantenimientoLinea
     */
    public MantenimientoLinea() {
        initComponents();
        this.setSize(super.getMaximumSize());
        this.btnAlta = super.getBtnAlta();
        this.btnBaja = super.getBtnBaja();
        this.btnMod = super.getBtnMod();
        this.tableLin = super.getTableItems();
        this.panelBtn = super.getPanelBtns();
        this.setComponents();
        super.getScrollPanelTable().setVisible(false);
        this.btnMod.setVisible(false);
        this.panelBtn.setLocation(9, btnAsignarEst.getY() + 30);

    }

    @Override
    public void update(Observable o, Object o1) {
        if (o.getClass() == FachadaInterfaz.class && o1.equals("Linea")) {
            setTreeLineas();
        }
    }

    private void setComponents() {
        setBtnAlta();
        setBtnBaja();
        setTreeLineas();
    }

    private void setTreeLineas() {
        Utilitaria.setTreeLineas(treeLineas);
    }

    private void setBtnAlta() {
        btnAlta.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                try {
                    if ("".equals(txtNom.getText())) {
                        JOptionPane.showMessageDialog(rootPane, "Inserte un Nombre de Linea para continuar.");
                    } else {
                    objFI.altaLinea(txtNom.getText());
                    setTreeLineas();
                      JOptionPane.showMessageDialog(rootPane,"Operacion Exitosa");
                    }
                } catch (FormatoLineaIncorrectoException ex) {
                    JOptionPane.showMessageDialog(rootPane,ex.getMessage());
                }catch (NumberFormatException numberFormatException) {
                    JOptionPane.showMessageDialog(rootPane, "El codigo postal posee un formato incorrecto", null, WIDTH);
                }
            }
        });
    }

    private void setBtnBaja() {
        btnBaja.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                try {
                    if (treeLineas.getSelectionCount() <= 0 || treeLineas.getSelectionPath().getParentPath() == null || !treeLineas.getSelectionPath().getParentPath().getLastPathComponent().toString().equals("Lineas y Estaciones")) {
                        JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una Linea para Continauar");
                    } else {
                        objFI.bajaLinea(treeLineas.getSelectionPath().getLastPathComponent().toString());
                        setTreeLineas();
                    }
                } catch (NumberFormatException numberFormatException) {
                    JOptionPane.showMessageDialog(rootPane, "El codigo postal posee un formato incorrecto", null, WIDTH);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAsignarEst = new javax.swing.JButton();
        txtNom = new javax.swing.JTextField();
        lblNom = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeLineas = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAsignarEst.setText("Asignar Estaciones");
        btnAsignarEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarEstActionPerformed(evt);
            }
        });

        lblNom.setText("Nombre Linea");

        treeLineas.setMaximumSize(new java.awt.Dimension(300, 64));
        treeLineas.setMinimumSize(new java.awt.Dimension(300, 64));
        treeLineas.setPreferredSize(new java.awt.Dimension(300, 64));
        treeLineas.setRequestFocusEnabled(false);
        treeLineas.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeLineasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(treeLineas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNom)
                                .addGap(18, 18, 18)
                                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAsignarEst, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNom, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnAsignarEst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAsignarEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarEstActionPerformed
        if (treeLineas.getSelectionCount() <= 0 || treeLineas.getSelectionPath().getParentPath() == null || !treeLineas.getSelectionPath().getParentPath().getLastPathComponent().toString().equals("Lineas y Estaciones")) {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una Linea para Continauar");
        } else {
            AsignarEstaciones frmAS = new AsignarEstaciones(objFI.getLinea(treeLineas.getSelectionPath().getLastPathComponent().toString()), objFI);
            frmAS.setVisible(true);
            frmAS.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_btnAsignarEstActionPerformed

    private void treeLineasValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeLineasValueChanged
    }//GEN-LAST:event_treeLineasValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignarEst;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNom;
    private javax.swing.JTree treeLineas;
    private javax.swing.JTextField txtNom;
    // End of variables declaration//GEN-END:variables
}